!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("rxjs"),require("@angular/common"),require("@angular/forms")):"function"==typeof define&&define.amd?define("ngx-quill-lite",["exports","@angular/core","rxjs","@angular/common","@angular/forms"],e):e((t=t||self)["ngx-quill-lite"]={},t.ng.core,t.rxjs,t.ng.common,t.ng.forms)}(this,(function(t,e,n,o,i){"use strict";var l=function(){function t(t){this.document=t,this._loadedLibraries={}}return t.prototype.lazyLoadQuill=function(){return n.forkJoin([this.loadScript("assets/quill/quill.min.js"),this.loadStyle("assets/quill/quill.snow.css")])},t.prototype.loadScript=function(t){var e=this;if(this._loadedLibraries[t])return this._loadedLibraries[t].asObservable();this._loadedLibraries[t]=new n.ReplaySubject;var o=this.document.createElement("script");return o.type="text/javascript",o.async=!0,o.src=t,o.onload=function(){e._loadedLibraries[t].next(),e._loadedLibraries[t].complete()},this.document.body.appendChild(o),this._loadedLibraries[t].asObservable()},t.prototype.loadStyle=function(t){var e=this;if(this._loadedLibraries[t])return this._loadedLibraries[t].asObservable();this._loadedLibraries[t]=new n.ReplaySubject;var o=this.document.createElement("link");return o.type="text/css",o.href=t,o.rel="stylesheet",o.onload=function(){e._loadedLibraries[t].next(),e._loadedLibraries[t].complete()},document.getElementsByTagName("head")[0].appendChild(o),this._loadedLibraries[t].asObservable()},t}();l.ɵprov=e.ɵɵdefineInjectable({factory:function(){return new l(e.ɵɵinject(o.DOCUMENT))},token:l,providedIn:"root"}),l.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],l.ctorParameters=function(){return[{type:void 0,decorators:[{type:e.Inject,args:[o.DOCUMENT]}]}]};var s=function(){function t(t,n,o,i){this.elementRef=t,this.zone=n,this.svc=o,this.document=i,this.html="",this.htmlChange=new e.EventEmitter,this.showEditor=!1}return t.prototype.ngOnInit=function(){var t=this;this.svc.lazyLoadQuill().subscribe((function(e){Quill||(Quill=t.document.defaultView.Quill),t.setupQuill()}))},t.prototype.setupQuill=function(){var t=this;if(Quill){var e=this.elementRef.nativeElement.querySelector("[quill-editor-toolbar]"),n=this.elementRef.nativeElement.querySelector("[quill-editor-container]");this.quillEditor=new Quill(n,{format:"html",theme:"snow",modules:{toolbar:e}});var o=this.quillEditor.clipboard.convert(this.html);this.quillEditor.setContents(o,"silent"),this.quillEditor.history.clear(),this.textChangeEvent=this.quillEditor.on("text-change",(function(e,n,o){if("user"===o){var i=t.quillEditor.root.innerHTML;"<p><br></p>"!==i&&"<div><br><div>"!==i||(i=null),t.zone.run((function(){t.htmlChange.emit(i)}))}}))}},t.prototype.ngOnDestroy=function(){this.textChangeEvent&&this.textChangeEvent.removeListener("text-change")},t}();s.decorators=[{type:e.Component,args:[{selector:"quill-editor",template:'<div quill-editor-toolbar>\n  <span class="ql-formats">\n    <select class="ql-header" title="Heading">\n      <option value="1"></option>\n      <option value="2"></option>\n      <option value="3"></option>\n      <option value="4"></option>\n      <option value="5"></option>\n      <option selected="selected"></option>\n    </select>\n  </span>\n  <span class="ql-formats">\n    <button class="ql-bold" title="Bold"></button>\n    <button class="ql-italic" title="Italic"></button>\n    <button class="ql-underline" title="Underline"></button>\n    <button class="ql-strike" title="Strike"></button>\n  </span>\n  <span class="ql-formats">\n    <button class="ql-link" title="Link"></button>\n    <button class="ql-blockquote" title="Block Quote"></button>\n    <button class="ql-code-block" title="Code Block"></button>\n    <button class="ql-script" value="sub" title="Subscript"></button>\n    <button class="ql-script" value="super" title="Superscript"></button>\n  </span>\n  <span class="ql-formats">\n    <button class="ql-list" value="ordered" title="Ordered List"></button>\n    <button class="ql-list" value="bullet" title="Bullet List"></button>\n    <button class="ql-indent" value="-1" title="Increase Indent"></button>\n    <button class="ql-indent" value="+1" title="Decrease Indent"></button>\n  </span>\n  <span class="ql-formats">\n    <select class="ql-color" title="Font Color">\n      <option selected></option>\n      <option value="#ffffff"></option>\n      <option value="#eeeeee"></option>\n      <option value="#808080"></option>\n      <option value="#ff0000"></option>\n      <option value="#00ff00"></option>\n      <option value="#0000ff"></option>\n    </select>\n    <select class="ql-background" title="Background Color">\n      <option selected></option>\n      <option value="#eeeeee"></option>\n      <option value="#808080"></option>\n      <option value="#000000"></option>\n      <option value="#ff0000"></option>\n      <option value="#00ff00"></option>\n      <option value="#0000ff"></option>\n    </select>\n  </span>\n  <span class="ql-formats">\n    <select class="ql-align" title="Aligment">\n      <option selected></option>\n      <option value="center"></option>\n      <option value="right"></option>\n      <option value="justify"></option>\n    </select>\n  </span>\n</div>\n<div quill-editor-container></div>\n',styles:[""]}]}],s.ctorParameters=function(){return[{type:e.ElementRef},{type:e.NgZone},{type:l},{type:void 0,decorators:[{type:e.Inject,args:[o.DOCUMENT]}]}]},s.propDecorators={html:[{type:e.Input}],htmlChange:[{type:e.Output}]};var r=function(){};r.decorators=[{type:e.NgModule,args:[{declarations:[s],imports:[o.CommonModule,i.FormsModule],exports:[s]}]}],t.NgxQuillLite=r,t.QuillEditorComponent=s,t.QuillEditorService=l,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-quill-lite.umd.min.js.map