{"version":3,"sources":["../../../projects/ngx-quill-lite/src/lib/quill-editor.service.ts","../../../projects/ngx-quill-lite/src/lib/quill-editor/quill-editor.component.ts","../../../projects/ngx-quill-lite/src/lib/ngx-quill-lite.module.ts"],"names":["QuillEditorService","document","this","_loadedLibraries","prototype","lazyLoadQuill","forkJoin","loadScript","loadStyle","url","_this","asObservable","ReplaySubject","script","createElement","type","async","src","onload","next","complete","body","appendChild","style","href","rel","getElementsByTagName","Injectable","args","providedIn","Inject","DOCUMENT","QuillEditorComponent","elementRef","zone","svc","html","htmlChange","EventEmitter","showEditor","ngOnInit","subscribe","_","Quill","defaultView","setupQuill","align","import","whitelist","register","toolbarElem","nativeElement","querySelector","editorElem","quillEditor","format","theme","modules","toolbar","contents","clipboard","convert","setContents","history","clear","textChangeEvent","on","delta","oldDelta","source","html_1","root","innerHTML","run","emit","ngOnDestroy","removeListener","Component","selector","template","ElementRef","NgZone","Input","Output","NgModule","declarations","imports","CommonModule","FormsModule","exports"],"mappings":"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","sourcesContent":["import { Injectable, Inject } from '@angular/core';\r\nimport { ReplaySubject, Observable, forkJoin } from 'rxjs';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuillEditorService {\r\n  private _loadedLibraries: { [url: string]: ReplaySubject<any> } = {};\r\n  quilljs: any;\r\n\r\n  constructor(@Inject(DOCUMENT) private readonly document: any) {}\r\n\r\n  lazyLoadQuill(): Observable<any> {\r\n    return forkJoin([\r\n      this.loadScript('assets/quill/quill.min.js'),\r\n      this.loadStyle('assets/quill/quill.snow.css')\r\n    ]);\r\n  }\r\n\r\n  private loadScript(url: string): Observable<any> {\r\n    if (this._loadedLibraries[url]) {\r\n      return this._loadedLibraries[url].asObservable();\r\n    }\r\n\r\n    this._loadedLibraries[url] = new ReplaySubject();\r\n\r\n    const script = this.document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.async = true;\r\n    script.src = url;\r\n    script.onload = () => {\r\n      this._loadedLibraries[url].next();\r\n      this._loadedLibraries[url].complete();\r\n    };\r\n\r\n    this.document.body.appendChild(script);\r\n\r\n    return this._loadedLibraries[url].asObservable();\r\n  }\r\n\r\n  private loadStyle(url: string): Observable<any> {\r\n    if (this._loadedLibraries[url]) {\r\n      return this._loadedLibraries[url].asObservable();\r\n    }\r\n\r\n    this._loadedLibraries[url] = new ReplaySubject();\r\n\r\n    const style = this.document.createElement('link');\r\n    style.type = 'text/css';\r\n    style.href = url;\r\n    style.rel = 'stylesheet';\r\n    style.onload = () => {\r\n      this._loadedLibraries[url].next();\r\n      this._loadedLibraries[url].complete();\r\n    };\r\n\r\n    const head = document.getElementsByTagName('head')[0];\r\n    head.appendChild(style);\r\n\r\n    return this._loadedLibraries[url].asObservable();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  NgZone,\r\n  Inject\r\n} from '@angular/core';\r\nimport { QuillEditorService } from '../quill-editor.service';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\ndeclare var Quill: any;\r\n\r\n@Component({\r\n  selector: 'quill-editor',\r\n  templateUrl: './quill-editor.component.html',\r\n  styleUrls: ['./quill-editor.component.css']\r\n})\r\nexport class QuillEditorComponent implements OnInit, OnDestroy {\r\n  @Input() html = '';\r\n  @Output() htmlChange = new EventEmitter<string>();\r\n  quillEditor: any;\r\n  private textChangeEvent: any;\r\n  showEditor = false;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private zone: NgZone,\r\n    private readonly svc: QuillEditorService,\r\n    @Inject(DOCUMENT) private readonly document: any\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.svc.lazyLoadQuill().subscribe(_ => {\r\n      if (!Quill) {\r\n        Quill = this.document.defaultView.Quill;\r\n      }\r\n      this.setupQuill();\r\n    });\r\n  }\r\n\r\n  setupQuill() {\r\n    if (!Quill) {\r\n      return;\r\n    }\r\n    // use generic align styles\r\n    const align = Quill.import('attributors/style/align');\r\n    align.whitelist = ['right', 'center', 'justify'];\r\n    Quill.register(align, true);\r\n\r\n    const toolbarElem = this.elementRef.nativeElement.querySelector(\r\n      '[quill-editor-toolbar]'\r\n    );\r\n    const editorElem = this.elementRef.nativeElement.querySelector(\r\n      '[quill-editor-container]'\r\n    );\r\n    this.quillEditor = new Quill(editorElem, {\r\n      format: 'html',\r\n      theme: 'snow',\r\n      modules: {\r\n        toolbar: toolbarElem\r\n      }\r\n    });\r\n\r\n    const contents = this.quillEditor.clipboard.convert(this.html);\r\n    this.quillEditor.setContents(contents, 'silent');\r\n    this.quillEditor.history.clear();\r\n\r\n    this.textChangeEvent = this.quillEditor.on(\r\n      'text-change',\r\n      (delta: any, oldDelta: any, source: string): void => {\r\n        if (source === 'user') {\r\n          let html: string | null = this.quillEditor.root.innerHTML;\r\n          if (html === '<p><br></p>' || html === '<div><br><div>') {\r\n            html = null;\r\n          }\r\n          this.zone.run(() => {\r\n            this.htmlChange.emit(html);\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.textChangeEvent) {\r\n      this.textChangeEvent.removeListener('text-change');\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { QuillEditorComponent } from './quill-editor/quill-editor.component';\r\n\r\n@NgModule({\r\n  declarations: [QuillEditorComponent],\r\n  imports: [CommonModule, FormsModule],\r\n  exports: [QuillEditorComponent]\r\n})\r\nexport class NgxQuillLite {}\r\n"]}